::TODO::
DONE-switch entire projection system nonsense to record angles yada yada yada
DONE-maybe switch grading to use angles too because that's what it's suppose to be
-do z-depth on ordering that lea gave you

::TODO::
DONE-scan images for connection points instead of using relative positions
DONE-put in lea's characetr

:::backend::
::input dictionary::
DONE-stores input, position and rotation of all joints
DONE-has accessors for reading relative rotations between two joints
	-based on position and not rotation

::2d projection manager::
DONE-use relative accessors to determine orientation for body parts
	-determine front facing plane
	DONE-project positions into plane, find angle in plane, map to angles as appropriate. 
	CLOSE ENOUGH-add smoothing to angles

::grading manager:: 
DONE-checking
	-do least squares on rotations in 2d
-getting 
	DONE-record position, flatten via projection, save
	-virtual mannequin of 2d points, move in unity, write and save angles
::visual::
DONE-drawing the person
	-use torso as center point
DONE-joint positions
	-design rule for determining joint points based on texture size
		-make a decision, tell lea
	-write code to procedurally generate mesh for the person using create primitive and resizing
		-double child all body parts to get centers properly
		-create hierarchy of parts
DONE-person in X Y plane with Y facing up and X facing right and Z facing forward

	